language: elixir
cache:
  directories:
  - deps
elixir:
  - 1.3.0
otp_release:
  - 19.0
env:
  global:
    - MIX_ENV=test
script:
  # - "./bin/version_increment.sh" # Uncomment this if you want to increment patch version on each Travis build.
  - "mix deps.get"
  - "mix test --trace"
  - "mix coveralls.travis"
  - "mix credo"
  - "mix dogma"<% if @docker %>
  - "./bin/build.sh"<% end %>
after_success:<% if @docker %>
# Also you can automatically build images and push them to Docker Hub.
# To do so you need to encrypt your docker user name and password:
#
#   $ travis encrypt DOCKER_USERNAME=sample_username DOCKER_PASSWORD=strong_password
#
# Then add it to env.global via secure: https://docs.travis-ci.com/user/encryption-keys/.
# Additionally should add env "DOCKER_HUB_ACCOUNT=org_name" to set Hub's organization or account that will hold images.
# Sample:
#
#   env:
#     global:
#       - DOCKER_HUB_ACCOUNT=org_name # Docker Hub Account or Organization that will hold images
#       - secure: "encrypeted_credentials" # Encrypted credentials to login into Docker Hub
#
#   - echo "Logging in into Docker Hub";
#     docker login -u=$DOCKER_USERNAME -p=$DOCKER_PASSWORD;
#   - echo "Setting Gih user/password";
#     git config --global user.email "travis@travis-ci.com";
#     git config --global user.name "Travis-CI";
#     git config --global push.default upstream;
#   - if [ "$TRAVIS_PULL_REQUEST" == "false" && $TRAVIS_BRANCH == "master" ]; then
#       ./bin/release.sh -a $DOCKER_HUB_ACCOUNT -t $TRAVIS_BRANCH -l;
#     fi;<% end %>

# Uncomment this if you want to push mix.exs with incremented back to origin repo.
#   - if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
#       echo "Done. Commiting changes back to repo.";
#       git add mix.exs;
#       git commit -m "Increment version [ci skip]";
#       git push origin HEAD:$TRAVIS_BRANCH;
#       git push origin --tags;
#     fi;
